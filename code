{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Group Assignment  week 8"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Notebook made by   (If not filled in correctly: 0 pts for assignment)\n",
    "\n",
    "__Name(s)__: \n",
    "\n",
    "__Student id(s)__ : \n",
    "\n",
    "### Pledge (taken from [Coursera's Honor Code](https://www.coursera.org/about/terms/honorcode) )\n",
    "\n",
    "\n",
    "\n",
    "Put here a selfie with your photo where you hold a signed paper with the following text: (if this is team work, put two selfies here). The link must be to some place on the web, not to a local file. **Assignments without the selfies will not be graded and receive 0 points.**\n",
    "\n",
    "> My answers to homework, quizzes and exams will be my own work (except for assignments that explicitly permit collaboration).\n",
    "\n",
    ">I will not make solutions to homework, quizzes or exams available to anyone else. This includes both solutions written by me, as well as any official solutions provided by the course staff.\n",
    "\n",
    ">I will not engage in any other activities that will dishonestly improve my results or dishonestly improve/hurt the results of others.\n",
    "\n",
    "<img src='link to your selfie'/>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Assignment \n",
    "\n",
    "\n",
    "### Standard option\n",
    "Create a search engine for one of the collections listed below:\n",
    "\n",
    "\n",
    "#### Examples of collections\n",
    "\n",
    "* Wikipedia: dumps are available at <https://dumps.wikimedia.org/nlwiki/latest/> You should get the file <https://dumps.wikimedia.org/nlwiki/latest/nlwiki-latest-pages-articles.xml.bz2> (everything) or a smaller part to start with, e.g., <https://dumps.wikimedia.org/nlwiki/latest/nlwiki-latest-pages-articles1.xml.bz2>\n",
    "* Enron email dataset: see e.g. <https://www.cs.cmu.edu/~./enron/>\n",
    "* 400K questions and 1.4M answers from goeievraag.nl: <http://maartenmarx.nl/teaching/zoekmachines/Data/goeievraag.zip>\n",
    "* the _kamervragen_ collection also used before: <http://maartenmarx.nl/teaching/zoekmachines/Data/kvr.zip> (you know this dataset well, so make your assignment extra exciting)\n",
    "* ~~[Hillary Clinton Email collection](https://archive.org/details/hillary-clinton-emails-august-31-release) See also our <http://maartenmarx.nl/teaching/zoekmachines/Data/> folder.~~\n",
    "* [part of ArchivX](http://www.cs.cornell.edu/projects/kddcup/datasets.html) Scientific articles in latex, with lots of metadata\n",
    "* the <a href=\"http://kdd.ics.uci.edu/databases/reuters21578/reuters21578.html\">Reuters newspaper collection</a>  \n",
    "\n",
    "             \n",
    "            \n",
    "Here is an example of a (small) document from Reuters:            \n",
    "\n",
    "```\n",
    "<REUTERS TOPICS=\"NO\" LEWISSPLIT=\"TRAIN\" CGISPLIT=\"TRAINING-SET\" OLDID=\"5546\" NEWID=\"3\">\n",
    "<DATE>26-FEB-1987 15:03:27.51</DATE>\n",
    "<TOPICS></TOPICS>\n",
    "<PLACES><D>usa</D></PLACES>\n",
    "<PEOPLE></PEOPLE>\n",
    "<ORGS></ORGS>\n",
    "<EXCHANGES></EXCHANGES>\n",
    "<COMPANIES></COMPANIES>\n",
    "<UNKNOWN> \n",
    "&#5;&#5;&#5;F A\n",
    "&#22;&#22;&#1;f0714&#31;reute\n",
    "d f BC-TEXAS-COMMERCE-BANCSH   02-26 0064</UNKNOWN>\n",
    "<TEXT>&#2;\n",
    "<TITLE>TEXAS COMMERCE BANCSHARES &lt;TCB> FILES PLAN</TITLE>\n",
    "<DATELINE>    HOUSTON, Feb 26 - </DATELINE><BODY>Texas Commerce Bancshares Inc's Texas\n",
    "Commerce Bank-Houston said it filed an application with the\n",
    "Comptroller of the Currency in an effort to create the largest\n",
    "banking network in Harris County.\n",
    "    The bank said the network would link 31 banks having\n",
    "13.5 billion dlrs in assets and 7.5 billion dlrs in deposits.\n",
    "       \n",
    " Reuter\n",
    "&#3;</BODY></TEXT>\n",
    "</REUTERS>\n",
    "```\n",
    "   \n",
    "### Other options\n",
    "* Provided that you come up with a non trivial collection you can create a search engine using a different collection and also different software, as long as it is not done in MySQL.\n",
    "* Discuss this with the assistants.\n",
    "    * Convince us that your data set is interesting and your software solution worthwhile investigating.\n",
    "* For the presentations it is fun to see something else.\n",
    "* Usually it has a positive effect on your mark if you do something completely different ;-)\n",
    "* You should do the same requirements.\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "collapsed": true
   },
   "source": [
    "<h2>Requirements</h2>\n",
    "        <p>Each of the following points <strong>must</strong> be addressed. Create a seperate page on the wiki for each point. Make sure these pages can be found from the menu of your wiki. \n",
    "        Explain what you did, and exemplify with links to screenshots/a working system.</p>\n",
    "        <ol>\n",
    "        <li>Search as we know it from Google. Give a result page (SERP), with links to the documents and some description of each hit.</li>\n",
    "            <li>Advanced search. Let a user be able to search in several fields, also in several fields simulteanously. Queries like \"return articles with a title  about XXX  and which are   about YYY in the period ZZZ\" should be possible.\n",
    "             </li>\n",
    "        <li>Do one of the following:\n",
    "            <ol><li>Represent the hits of a query with a wordcloud of 25-50 informative words. The wordcloud should somehow summarise what the collection has to say about the query.\n",
    "            You may think of these words as words that you could add to the query in order to improve recall (blind relevance feedback/query expansion). </li>\n",
    "                <li>Represent each document   with a word-cloud. </li></ol>\n",
    "        <br/>You can use several techniques to get rid of high frequency, but meaningless words: of course IDF, but also mutual information (see 13.5.1), or of course the technique from the paper by Kaptein et al on wordclouds.\n",
    "        </li>\n",
    "          <!--  <li>Group (nearly) identical documents. It is bad if two or more of the precious places of your top ten hits are occupied by near identical copies of a document.\n",
    "            Even more so if it is not relevant! So, get rid of these, by grouping them for instance. You get an idea of these duplicates if you search for \"neuken\".</li>\n",
    "            -->\n",
    "            <li>Give next to a traditional list of results, a timeline in which you indicate how many hits there are over time.</li>\n",
    "            <li>Provide Faceted Search next to the traditional list of results. For the \"Reuters\" collection, use the Category information as facet values.</li>\n",
    "            <li><strong>Evaluate your results</strong> Let 2 persons assess the relevancy of the top 10 documents for <strong>5 different queries</strong>. Compute Cohen's kappa. Determine the average precision at 10 for your system based on these 5 queries, and the two relevance assesments. \n",
    "                Also plot the P@10 (for both judges) for each query, showing differences in hard and easy queries.  \n",
    "                Describe clearly how you solved differences in judgements.\n",
    "            <br/>\n",
    "            Create your queries in the following format:\n",
    "<pre>\n",
    "&lt;topic number=\"6\"  >\n",
    "    &lt;query>kcs&lt;/query>\n",
    "    &lt;description>Find information on the Kansas City Southern railroad.\n",
    "    &lt;/description>\n",
    "\n",
    "&lt;/topic>\n",
    "\n",
    "&lt;topic number=\"16\"  >\n",
    "    &lt;query>arizona game and fish&lt;/query>\n",
    "    &lt;description>I'm looking for information about fishing and hunting\n",
    "    in Arizona.\n",
    "    &lt;/description>\n",
    "&lt;/topic>\n",
    "</pre>\n",
    "    So, both provide the actual query, and a description of the information need that was behind the query.\n",
    "    <br/>\n",
    "    Give a small set of clear guidelines for judging the results, and let your judges follow these guidelines.\n",
    "    <br/>\n",
    "    It is far more interesting to have difficult queries (both for the search engine and for the judges) than to have queries on which all ten retrieved documents are relevant.\n",
    "    So, try to create a good list of information needs.\n",
    "<br/>\n",
    "Change the ranking of your system, compute the average precision at 10 using your 5 queries, compare the results to your old system, and EXPLAIN what is going on.\n",
    "</li>\n",
    "\n",
    "</ol>\n",
    "\n",
    "<h2>Presentation</h2>\n",
    "<p>During your presentation you should have a live working search engine, that you demonstrate on the spot. Your presentation should be structured so that you will show all  requirements.\n",
    "You will be asked to show how your system works using information needs coming  from the audience.</p>\n",
    "<p>**Hint:** focus on a special aspect of your project. Everyone has done something similar, so your audience knows what was hard and what was terrible. Pick something you think will interest them.</p>\n",
    "\n",
    "\n",
    "<h2>How you will be marked</h2>\n",
    "<ul>\n",
    "    <li>Sent the URL of your guthub wiki to Maarten Marx BEFORE the presentation.</li>\n",
    "    <li>The first page of the wiki should contain:\n",
    "        <ol>\n",
    "            <li>The names and student numbers of the project members</li>\n",
    "            <li>A link to the slides of your presentation</li>\n",
    "            <li>A table of contents, with links to pages on the wiki adressing one of each of the \"must-have\" points listed above.\n",
    "            <br/>During grading, you will receive points for each of the points. So make it crystal clear where they are adressed in your wiki. Use one page per point.</li>\n",
    "\n",
    "\n",
    "</ol>\n",
    "</li>\n",
    "<li>The page for each point should contain, all rather briefly,\n",
    "<ol>\n",
    "<li>What you did and why you choose to do it in your special way.</li>\n",
    "<li>Examples of what works, and what does not work (very well).</li>\n",
    "<li>An evaluation of the quality of your work in 3-4 sentences.</li>\n",
    "</ol></li>\n",
    "<li>Clickable links to a live working demo are <strong>highly appreciated</strong>. </li>\n",
    "</ul>\n",
    "\n",
    "\n",
    "<h2>How your grade is computed?</h2>\n",
    "You get a grade between 0 and 1 for each of the 6 points plus for the presentation. \n",
    "They are weighted as follows to arrive at your final grade.\n",
    "<pre>\n",
    "1: .1\n",
    "2: .2\n",
    "3: .2\n",
    "4: .1\n",
    "5: .1\n",
    "6: .2\n",
    "presentation : .1\n",
    "</pre>\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "%matplotlib notebook\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "from ipywidgets import *\n",
    "from IPython.display import display, clear_output\n",
    "from IPython.html import widgets\n",
    "from tkinter import *\n",
    "import nltk\n",
    "from collections import Counter\n",
    "from nltk.corpus import stopwords\n",
    "import string\n",
    "import sys\n",
    "import json\n",
    "#from elasticsearch import Elasticsearch\n",
    "import re\n",
    "#from wordcloud import WordCloud, STOPWORDS, ImageColorGenerator\n",
    "import numpy as np\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(40516, 6)\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>jaar</th>\n",
       "      <th>partij</th>\n",
       "      <th>titel</th>\n",
       "      <th>vraag</th>\n",
       "      <th>antwoord</th>\n",
       "      <th>ministerie</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>KVR1000.xml</th>\n",
       "      <td>1994</td>\n",
       "      <td>PvdA</td>\n",
       "      <td>De vragen betreffen de betrouwbaarheid van de...</td>\n",
       "      <td>Hebt u kennisgenomen van het televisieprogram...</td>\n",
       "      <td>Ja. Het bedoelde geluidmeetpunt is eigendom v...</td>\n",
       "      <td>Verkeer en Waterstaat</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>KVR10000.xml</th>\n",
       "      <td>1999</td>\n",
       "      <td>PvdA</td>\n",
       "      <td>Vragen naar aanleiding van berichten (uitzend...</td>\n",
       "      <td>Kent u de berichten over de situatie in de Me...</td>\n",
       "      <td></td>\n",
       "      <td>Justitie</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>KVR10001.xml</th>\n",
       "      <td>1999</td>\n",
       "      <td>SP</td>\n",
       "      <td>Vragen naar aanleiding van de berichten \"Nede...</td>\n",
       "      <td>Kent u de berichten Â«Nederland steunt de Soeh...</td>\n",
       "      <td></td>\n",
       "      <td>Financien</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>KVR10002.xml</th>\n",
       "      <td>1999</td>\n",
       "      <td>PvdA</td>\n",
       "      <td>Vragen over de gebrekkige opvang van verpleeg...</td>\n",
       "      <td>Kent u het bericht over onderzoek van Nu91 me...</td>\n",
       "      <td>Ja. Het onderzoek van NUâ€™91 wijst uit dat het...</td>\n",
       "      <td>Volksgezondheid, Welzijn en Sport</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>KVR10003.xml</th>\n",
       "      <td>1999</td>\n",
       "      <td>PvdA</td>\n",
       "      <td>Vragen over onbetrouwbaarheid van filemeldingen.</td>\n",
       "      <td>Hebt u kennisgenomen van de berichten over de...</td>\n",
       "      <td>Ja. Nee. Door de waarnemers van het Algemeen ...</td>\n",
       "      <td>Verkeer en Waterstaat</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>KVR10004.xml</th>\n",
       "      <td>1999</td>\n",
       "      <td>D66</td>\n",
       "      <td>Vragen naar aanleiding van het bericht in de ...</td>\n",
       "      <td>Kent u het bericht als zou het RIVM onjuiste ...</td>\n",
       "      <td>Ja. Nee. Als reactie op het Volkskrant-artike...</td>\n",
       "      <td>Verkeer en Waterstaat</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>KVR10006.xml</th>\n",
       "      <td>1999</td>\n",
       "      <td>PvdA</td>\n",
       "      <td></td>\n",
       "      <td>Kent u berichten over asbestgevaar voor KFOR-...</td>\n",
       "      <td>Kamerstuk 22 181, nr. 293</td>\n",
       "      <td>Defensie</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>KVR10007.xml</th>\n",
       "      <td>1999</td>\n",
       "      <td>D66</td>\n",
       "      <td>Vragen naar aanleiding van het artikel ''Eila...</td>\n",
       "      <td>Kent u het artikel Eilander artsen vechten vo...</td>\n",
       "      <td>Ja. Ik ben van mening, en ga er vanuit dat di...</td>\n",
       "      <td>Volksgezondheid, Welzijn en Sport</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>KVR10008.xml</th>\n",
       "      <td>1999</td>\n",
       "      <td>GroenLinks</td>\n",
       "      <td>Vragen over de mogelijke terugkeer naar het o...</td>\n",
       "      <td>Kent u het artikel Â«De specialist declareert ...</td>\n",
       "      <td>Ja. Neen, op dit moment is in drie van de rui...</td>\n",
       "      <td>Volksgezondheid, Welzijn en Sport (VWS)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>KVR10009.xml</th>\n",
       "      <td>1999</td>\n",
       "      <td>SP</td>\n",
       "      <td>Vragen over de uiteindelijke invulling van ui...</td>\n",
       "      <td>Is over de uiteindelijke invulling van de uit...</td>\n",
       "      <td>De Ziekenfondsraad, thans College voor zorgve...</td>\n",
       "      <td>Volksgezondheid, Welzijn en Sport (VWS)</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                jaar       partij  \\\n",
       "KVR1000.xml     1994         PvdA   \n",
       " KVR10000.xml   1999         PvdA   \n",
       " KVR10001.xml   1999           SP   \n",
       " KVR10002.xml   1999         PvdA   \n",
       " KVR10003.xml   1999         PvdA   \n",
       " KVR10004.xml   1999          D66   \n",
       " KVR10006.xml   1999         PvdA   \n",
       " KVR10007.xml   1999          D66   \n",
       " KVR10008.xml   1999   GroenLinks   \n",
       " KVR10009.xml   1999           SP   \n",
       "\n",
       "                                                           titel  \\\n",
       "KVR1000.xml     De vragen betreffen de betrouwbaarheid van de...   \n",
       " KVR10000.xml   Vragen naar aanleiding van berichten (uitzend...   \n",
       " KVR10001.xml   Vragen naar aanleiding van de berichten \"Nede...   \n",
       " KVR10002.xml   Vragen over de gebrekkige opvang van verpleeg...   \n",
       " KVR10003.xml   Vragen over onbetrouwbaarheid van filemeldingen.   \n",
       " KVR10004.xml   Vragen naar aanleiding van het bericht in de ...   \n",
       " KVR10006.xml                                                      \n",
       " KVR10007.xml   Vragen naar aanleiding van het artikel ''Eila...   \n",
       " KVR10008.xml   Vragen over de mogelijke terugkeer naar het o...   \n",
       " KVR10009.xml   Vragen over de uiteindelijke invulling van ui...   \n",
       "\n",
       "                                                           vraag  \\\n",
       "KVR1000.xml     Hebt u kennisgenomen van het televisieprogram...   \n",
       " KVR10000.xml   Kent u de berichten over de situatie in de Me...   \n",
       " KVR10001.xml   Kent u de berichten Â«Nederland steunt de Soeh...   \n",
       " KVR10002.xml   Kent u het bericht over onderzoek van Nu91 me...   \n",
       " KVR10003.xml   Hebt u kennisgenomen van de berichten over de...   \n",
       " KVR10004.xml   Kent u het bericht als zou het RIVM onjuiste ...   \n",
       " KVR10006.xml   Kent u berichten over asbestgevaar voor KFOR-...   \n",
       " KVR10007.xml   Kent u het artikel Eilander artsen vechten vo...   \n",
       " KVR10008.xml   Kent u het artikel Â«De specialist declareert ...   \n",
       " KVR10009.xml   Is over de uiteindelijke invulling van de uit...   \n",
       "\n",
       "                                                        antwoord  \\\n",
       "KVR1000.xml     Ja. Het bedoelde geluidmeetpunt is eigendom v...   \n",
       " KVR10000.xml                                                      \n",
       " KVR10001.xml                                                      \n",
       " KVR10002.xml   Ja. Het onderzoek van NUâ€™91 wijst uit dat het...   \n",
       " KVR10003.xml   Ja. Nee. Door de waarnemers van het Algemeen ...   \n",
       " KVR10004.xml   Ja. Nee. Als reactie op het Volkskrant-artike...   \n",
       " KVR10006.xml                          Kamerstuk 22 181, nr. 293   \n",
       " KVR10007.xml   Ja. Ik ben van mening, en ga er vanuit dat di...   \n",
       " KVR10008.xml   Ja. Neen, op dit moment is in drie van de rui...   \n",
       " KVR10009.xml   De Ziekenfondsraad, thans College voor zorgve...   \n",
       "\n",
       "                                             ministerie  \n",
       "KVR1000.xml                       Verkeer en Waterstaat  \n",
       " KVR10000.xml                                  Justitie  \n",
       " KVR10001.xml                                 Financien  \n",
       " KVR10002.xml         Volksgezondheid, Welzijn en Sport  \n",
       " KVR10003.xml                     Verkeer en Waterstaat  \n",
       " KVR10004.xml                     Verkeer en Waterstaat  \n",
       " KVR10006.xml                                  Defensie  \n",
       " KVR10007.xml         Volksgezondheid, Welzijn en Sport  \n",
       " KVR10008.xml   Volksgezondheid, Welzijn en Sport (VWS)  \n",
       " KVR10009.xml   Volksgezondheid, Welzijn en Sport (VWS)  "
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "\n",
    "# nltk.download('stopwords')\n",
    "DutchStop= stopwords.words('dutch')\n",
    "\n",
    "\n",
    "names=['jaar', 'partij','titel','vraag','antwoord','ministerie']\n",
    "\n",
    "# Change to KVR1000.csv.gz if this becomes to0 slow for you\n",
    "kvrdf= pd.read_csv('http://maartenmarx.nl/teaching/zoekmachines/LectureNotes/MySQL/KVR.csv.gz', \n",
    "                   compression='gzip', sep='\\t', \n",
    "                   index_col=0, names=names,\n",
    "                   ) \n",
    "\n",
    "for kolom in names[1:]:\n",
    "    kvrdf[kolom]= kvrdf[kolom].astype(str)\n",
    "print(kvrdf.shape)\n",
    "\n",
    "kvrdf.dropna(subset=['ministerie'])\n",
    "\n",
    "kvrdf.head(10)\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# shutdown \n",
    "!  curl -XPOST 'http://localhost:9200/_shutdown'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "# clean data by translating the ministerie to its abbreviation\n",
    "trans = {\n",
    "'Verk': 'VW',\n",
    "'Wate': 'VW',\n",
    "'Just': 'JUS',\n",
    "'Fina': 'FIN',\n",
    "'Volk': '',\n",
    "'Welz': 'VWS',\n",
    "'Spor': 'VWS',\n",
    "'Defe': 'DEF',\n",
    "'Land': 'LNV',\n",
    "'Natu': 'LNV',\n",
    "'Viss': 'LNV',\n",
    "'Buit': 'BUZA',\n",
    "'Zake': '',\n",
    "'Econ': 'EZ',\n",
    "'Ruim': 'VROM',\n",
    "'Orde': 'VROM',\n",
    "'Mili': 'VROM',\n",
    "'Alge': 'AZ',\n",
    "'Soci': 'SZW',\n",
    "'Werk': 'SZW',\n",
    "'Onde': 'OCW',\n",
    "'Cult': 'OCW',\n",
    "'Wete': 'OCW',\n",
    "'Binn': 'BZK',\n",
    "'Koni': 'BZK',\n",
    "'Ontw': 'OS',\n",
    "'Grot': 'GSI',\n",
    "'Sted': 'GSI',\n",
    "'Inte': '',\n",
    "'Mini': 'MP',\n",
    "'Vree': 'VI',\n",
    "'Kabi': 'NAAZ',\n",
    "'Nede': 'NAAZ',\n",
    "'Arub': 'NAAZ',\n",
    "'Best': 'BVK',\n",
    "'Vern': 'BVK',\n",
    "'Euro': 'EUZ',\n",
    "'Voed': 'LNV',\n",
    "'Stat': 'SG',\n",
    "'Jeug': '',\n",
    "'Prev': 'IJPR',\n",
    "'Recl': 'IJPR',\n",
    "'Gezi': 'JG',\n",
    "'Wone': 'WWI',\n",
    "'Wijk': 'WWI',\n",
    "'Anti': 'NAAZ',\n",
    "'nan': ''}\n",
    "\n",
    "map_ministerie = {'Verkeer en Waterstaat':'VW',\n",
    "'Justitie': 'JUS',\n",
    "'FinanciÃ«n':'FIN',\n",
    "'Volksgezondheid, Welzijn en Sport':'VWS',\n",
    "'Defensie': 'DEF',\n",
    "'Landbouw, Natuurbeheer en Visserij':'LNV',\n",
    "'Buitenlandse Zaken': 'BUZA',\n",
    "'Economische Zaken':'EZ', \n",
    "'Volkshuisvesting, Ruimtelijke Ordening en Milieubeheer':'VROM',\n",
    "'Algemene Zaken': 'AZ',\n",
    "'Sociale Zaken en Werkgelegenheid': 'SZW',\n",
    "'Onderwijs, Cultuur en Wetenschappen': 'OCW',\n",
    "'Binnenlandse Zaken en Koninkrijksrelaties': 'BZK',\n",
    "'Ontwikkelingssamenwerking': 'OS',\n",
    "'Grote Steden- en Integratiebeleid': 'GSI',\n",
    "'Minister-President': 'MP',\n",
    "'Vreemdelingenzaken en Integratie': 'VI',\n",
    "'Nederlands-Antilliaanse en Arubaanse Zaken': 'NAAZ',\n",
    "'Bestuurlijke Vernieuwing en Koninkrijksrelaties': 'BVK',\n",
    "'Europese Zaken': 'EUZ',\n",
    "'Staten-Generaal': 'SG',\n",
    "'Integratie, Jeugdbescherming, Preventie en Reclassering': 'IJPR',\n",
    "'Jeugd en Gezin': 'JG',\n",
    "'Wonen, Wijken en Integratie': 'WWI',\n",
    "'UNKOWN': 'nan'}\n",
    "\n",
    "map_afk = dict([(v, k) for (k, v) in map_ministerie.items()])\n",
    "map_afk['BIZA'] = 'Binnenlandse Zaken en Koninkrijksrelaties'\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Normalize ministeries\n",
    "\n",
    "for index in kvrdf.index:\n",
    "    item = kvrdf.loc[kvrdf.index == index]\n",
    "    minist = item.ministerie.values[0]\n",
    "    x = minist.translate(translate_table)\n",
    "    tmp = []\n",
    "    for word in x.split():            \n",
    "        if word.upper() == word: # Afkortingen\n",
    "             tmp.append(word)   \n",
    "            \n",
    "        if word.lower() != word : # drop stop-words\n",
    "            word = word[:4] # normalize\n",
    "            tmp.append(word)\n",
    "    res = []\n",
    "    for term in tmp:\n",
    "        if term.upper() == term:\n",
    "            if term not in res:\n",
    "                res.append(term)\n",
    "            continue    \n",
    "        k = trans[term]\n",
    "        if len(k) > 0 and k not in res:\n",
    "            res.append(k)\n",
    "    if len(res) > 0:\n",
    "        kvrdf.loc[kvrdf.index == index, 'ministerie'] = ' '.join(res)\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 172,
   "metadata": {},
   "outputs": [],
   "source": [
    "\n",
    "HOST = 'http://localhost:9200/'\n",
    "es = Elasticsearch(hosts=[HOST])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Import dataset to elasticsearch\n",
    "\n",
    "k = (''.join(letters) for letters in itertools.permutations(string.ascii_letters,4))\n",
    "for i, index in enumerate(kvrdf.index):\n",
    "    test_index = re.search('.xml', index)\n",
    "    \n",
    "    if test_index == None:\n",
    "        continue\n",
    "        \n",
    "    item = kvrdf.loc[kvrdf.index == index]\n",
    "    document = {\n",
    "        \"jaar\" : item.jaar.values[0],\n",
    "        \"ministerie\" : item.ministerie.values[0],\n",
    "        \"partij\" :  item.partij.values[0],\n",
    "        \n",
    "        \"vraag\": item.vraag.values[0].translate(translate_table),\n",
    "        \"titel\" :  item.titel.values[0].translate(translate_table),\n",
    "        \"antwoord\" : item.antwoord.values[0].translate(translate_table)\n",
    "    }\n",
    "    es.index(index='kamervragen', doc_type='document', id=next(k), body=document)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 161,
   "metadata": {},
   "outputs": [],
   "source": [
    "def get_wordcloud(text):  \n",
    "    # Delete stopwords and Lowercase:\n",
    "    text = [word.lower() for word in text.split() if word.lower() not in DutchStop]\n",
    "\n",
    "    # Create and generate a word cloud image:\n",
    "    wordcloud = WordCloud().generate(' '.join(text))\n",
    "    return (list(wordcloud.words_)[:25])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 165,
   "metadata": {},
   "outputs": [],
   "source": [
    "def SERP(results):\n",
    "    df = pd.DataFrame(columns=['jaar', 'ministerie', 'partij', 'titel'])\n",
    "    for item in results['hits']['hits']:\n",
    "        jaar = item['_source']['jaar']\n",
    "        ministerie = ' '.join([map_afk[x] for x in item['_source']['ministerie'].split()])\n",
    "        partij = item['_source']['partij']\n",
    "        titel = item['_source']['titel']\n",
    "        score = item['_score']\n",
    "        df = df.append({'jaar': jaar, 'ministerie': ministerie, 'partij': partij, 'titel': titel, 'score': score}, ignore_index=True)\n",
    "    \n",
    "    \n",
    "    df.index = np.arange(1, len(df)+1)\n",
    "    for i, item in enumerate(results['hits']['hits']):\n",
    "        txt = item['_source']['titel'] + item['_source']['vraag'] + item['_source']['antwoord']\n",
    "        wordcloud = get_wordcloud(txt)\n",
    "        display(df.loc[df.index == i+1])\n",
    "        print(wordcloud,'\\n')\n",
    "        \n",
    "    display(select_result)\n",
    "    display(button_result)\n",
    "    button_result.on_click(handle_results)\n",
    "    num = select_result.value\n",
    "    if len(num) != 0:\n",
    "        num = int(num[0])\n",
    "        df2 = pd.DataFrame(columns=['Jaar', 'Ministerie', 'Partij'])\n",
    "        item = results['hits']['hits'][num-1]['_source']\n",
    "                 \n",
    "        best = df2.append({'Jaar': item['jaar'], 'Ministerie': ' '.join([map_afk[x] for x in item['ministerie'].split()]), 'Partij': item['partij']}, ignore_index=True)\n",
    "        print('\\n', best.to_string(index=False))\n",
    "        \n",
    "        if len(item['titel']) < 3:\n",
    "            item['titel'] = 'Geen titel'\n",
    "        print('\\n', 'Titel: \\n', item['titel'], '\\n')\n",
    "        \n",
    "        if len(item['vraag']) < 3:\n",
    "            item['vraag'] = 'Geen vraag'\n",
    "        print('Vraag: \\n', item['vraag'], '\\n')\n",
    "        \n",
    "        if len(item['antwoord']) < 3:\n",
    "            item['antwoord'] = 'Geen antwoord'\n",
    "        print('Antwoord: \\n', item['antwoord'], '\\n')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 163,
   "metadata": {},
   "outputs": [],
   "source": [
    "def handle_submit(sender):\n",
    "    clear_output()\n",
    "    \n",
    "    print(\"Zoek op de volgende criteria:\")\n",
    "    display(titelsearch)\n",
    "    display(vraagsearch)\n",
    "    display(antwoordsearch)\n",
    "    display(select_ministeries)\n",
    "    display(all_mini)\n",
    "    display(jaren_slider)\n",
    "    display(button)\n",
    "    \n",
    "    ministerie_string = ''\n",
    "    jaren_string = ''\n",
    "    \n",
    "    for i in range(jaren_slider.value[0], jaren_slider.value[1]+1):\n",
    "        jaren_string += str(i)+' '\n",
    "    \n",
    "    if all_mini.value == True:\n",
    "        ministerie_string = ' '\n",
    "    else:\n",
    "        for m in select_ministeries.value:     \n",
    "            ministerie_string += map_ministerie[m]\n",
    "            ministerie_string += ' '\n",
    "            \n",
    "    q= {\n",
    "        \"query\": {\n",
    "            \"bool\": {\n",
    "                \"should\": [\n",
    "                    {\"match\":{\"titel\": titelsearch.value}},\n",
    "                    {\"match\":{\"vraag\": vraagsearch.value}},\n",
    "                    {\"match\":{\"antwoord\": antwoordsearch.value}},\n",
    "                    {\"match\":{\"ministerie\" : ministerie_string}},\n",
    "                    {\"match\":{\"jaar\" : jaren_string}}\n",
    "                ]}}}\n",
    "    res = es.search(index='kamervragen', doc_type='document', body=q)\n",
    "    SERP(res)\n",
    "    \n",
    "    \n",
    "def handle_results(sender):\n",
    "        clear_output()\n",
    "        handle_submit(sender)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 167,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Zoek op de volgende criteria:\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "b6130482c7724ffb8b42cc314b9727f4",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Text(value='', placeholder='Titel')"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "97904e35beef494cb7c87a9ba6387c0a",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Text(value='', placeholder='Vraag')"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "a41bf8fa53c34ca9ad2aa1c55fa12393",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Text(value='', placeholder='Antwoord')"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "cf85dccb2b4348e1ad486d4534ece5d6",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "SelectMultiple(description='Ministeries:', options=('Verkeer en Waterstaat', 'Justitie', 'FinanciÃ«n', 'Volksgeâ€¦"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "7bf68bde0b4f4edaa918a328036dbff0",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Checkbox(value=False, description='Alle ministeries')"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "255caf153a264b27b740861abbec2397",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "IntRangeSlider(value=(1990, 2000), continuous_update=False, description='Period:', max=2001, min=1990)"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "c55388522bfc49d08294d65ee778409f",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Button(description='Search', style=ButtonStyle())"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Advanced Search\n",
    "\n",
    "titelsearch = widgets.Text(placeholder = 'Titel')\n",
    "vraagsearch = widgets.Text(placeholder = 'Vraag')\n",
    "antwoordsearch = widgets.Text(placeholder = 'Antwoord')\n",
    "\n",
    "select_ministeries =  widgets.SelectMultiple(\n",
    "    options=list(map_ministerie),\n",
    "    value=[],\n",
    "    #rows=10,\n",
    "    description='Ministeries:',\n",
    "    disabled=False)\n",
    "\n",
    "select_result =  widgets.SelectMultiple(\n",
    "    options=list(range(1,11)),\n",
    "    value=[],\n",
    "    #rows=10,\n",
    "    description='Document number:',\n",
    "    disabled=False\n",
    ")\n",
    "\n",
    "button = widgets.Button(description='Search')\n",
    "\n",
    "button_result = widgets.Button(description='Select')\n",
    "\n",
    "\n",
    "jaren_slider = widgets.IntRangeSlider(\n",
    "    value=[1990, 2000],\n",
    "    min=1990,\n",
    "    max=2001,\n",
    "    step=1,\n",
    "    description='Period:',\n",
    "    disabled=False,\n",
    "    continuous_update=False,\n",
    "    orientation='horizontal',\n",
    "    readout=True,\n",
    "    readout_format='d')\n",
    "\n",
    "\n",
    "all_mini = widgets.Checkbox(\n",
    "    value=False,\n",
    "    description='Alle ministeries',\n",
    "    disabled=False)\n",
    "\n",
    "print(\"Zoek op de volgende criteria:\")\n",
    "display(titelsearch)\n",
    "display(vraagsearch)\n",
    "display(antwoordsearch)\n",
    "display(select_ministeries)\n",
    "display(all_mini)\n",
    "display(jaren_slider)\n",
    "\n",
    "text.on_submit(handle_submit)\n",
    "\n",
    "button = widgets.Button(description='Search')\n",
    "display(button)\n",
    "\n",
    "button.on_click(handle_submit)"
   ]
  }
 ],
 "metadata": {
  "anaconda-cloud": {},
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 1
}

